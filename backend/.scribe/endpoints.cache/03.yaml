## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestión de Mascotas'
description: |-

  Endpoints para gestionar las mascotas del usuario autenticado,
  así como listar todas las mascotas disponibles.
  Estos endpoints requieren autenticación via Sanctum, excepto /pets/all.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/pets/all
    metadata:
      groupName: 'Gestión de Mascotas'
      groupDescription: |-

        Endpoints para gestionar las mascotas del usuario autenticado,
        así como listar todas las mascotas disponibles.
        Estos endpoints requieren autenticación via Sanctum, excepto /pets/all.
      subgroup: ''
      subgroupDescription: ''
      title: 'Muestra un listado de todas las mascotas paginadas.'
      description: |-
        Nota: Según la configuración de rutas proporcionada, este endpoint requiere autenticación,
        a pesar del comentario original en el código del controlador.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      limit:
        name: limit
        description: 'Número de mascotas por página. Por defecto: 20.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'El número de página a recuperar. Por defecto: 1.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      limit: 10
      page: 2
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": [
          {
          "id": 1,
          "user_id": 1,
          "name": "Firulais",
          "species": "Dog",
          "breed": "Labrador",
          "age": 3,
          "created_at": "2023-10-27T10:00:00.000000Z",
          "updated_at": "2023-10-27T10:00:00.000000Z"
          },
          {
          "id": 2,
          "user_id": 2,
          "name": "Buddy",
          "species": "Dog",
          "breed": null,
          "age": 5,
          "created_at": "2023-10-27T10:15:00.000000Z",
          "updated_at": "2023-10-27T10:15:00.000000Z"
          }
          ],
          "links": {
          "first": "http://localhost/api/pets/all?page=1",
          "last": "http://localhost/api/pets/all?page=3",
          "prev": null,
          "next": "http://localhost/api/pets/all?page=2"
          },
          "meta": {
          "current_page": 1,
          "from": 1,
          "last_page": 3,
          "links": [
          {
          "url": null,
          "label": "&laquo; Previous",
          "active": false
          },
          {
          "url": "http://localhost/api/pets/all?page=1",
          "label": "1",
          "active": true
          },
          {
          "url": "http://localhost/api/pets/all?page=2",
          "label": "2",
          "active": false
          },
          {
          "url": "http://localhost/api/pets/all?page=3",
          "label": "3",
          "active": false
          },
          {
          "url": "http://localhost/api/pets/all?page=2",
          "label": "Next &raquo;",
          "active": false
          }
          ],
          "path": "http://localhost/api/pets/all",
          "per_page": 20,
          "to": 20,
          "total": 50
          }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/pets
    metadata:
      groupName: 'Gestión de Mascotas'
      groupDescription: |-

        Endpoints para gestionar las mascotas del usuario autenticado,
        así como listar todas las mascotas disponibles.
        Estos endpoints requieren autenticación via Sanctum, excepto /pets/all.
      subgroup: ''
      subgroupDescription: ''
      title: 'Muestra un listado de las mascotas para el usuario autenticado.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": [
          {
          "id": 1,
          "user_id": 1,
          "name": "Firulais",
          "species": "Dog",
          "breed": "Labrador",
          "age": 3,
          "created_at": "2023-10-27T10:00:00.000000Z",
          "updated_at": "2023-10-27T10:00:00.000000Z"
          },
          {
          "id": 2,
          "user_id": 1,
          "name": "Michi",
          "species": "Cat",
          "breed": "Siamese",
          "age": 2,
          "created_at": "2023-10-27T10:05:00.000000Z",
          "updated_at": "2023-10-27T10:05:00.000000Z"
          }
          ]
          }
        headers: []
        description: Success
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: Unauthenticated
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/pets
    metadata:
      groupName: 'Gestión de Mascotas'
      groupDescription: |-

        Endpoints para gestionar las mascotas del usuario autenticado,
        así como listar todas las mascotas disponibles.
        Estos endpoints requieren autenticación via Sanctum, excepto /pets/all.
      subgroup: ''
      subgroupDescription: ''
      title: 'Almacena una mascota recién creada.'
      description: 'Asigna automáticamente la mascota al usuario autenticado.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'El nombre de la mascota.'
        required: true
        example: '"Max"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      species:
        name: species
        description: "La especie de la mascota (ej. 'perro', 'gato')."
        required: true
        example: '"Perro"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      breed:
        name: breed
        description: 'La raza de la mascota. Opcional.'
        required: false
        example: '"Golden Retriever"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      age:
        name: age
        description: 'La edad de la mascota en años. Opcional. Mínimo: 0.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      user_id:
        name: user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Max"'
      species: '"Perro"'
      breed: '"Golden Retriever"'
      age: 5
      user_id: architecto
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "message": "Mascota creada exitosamente.",
          "pet": {
          "name": "Max",
          "species": "Perro",
          "breed": "Golden Retriever",
          "age": 5,
          "user_id": 1,
          "updated_at": "2023-10-27T10:30:00.000000Z",
          "created_at": "2023-10-27T10:30:00.000000Z",
          "id": 3
          }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: Unauthenticated
        custom: []
      -
        status: 403
        content: |-
          {
          "message": "This action is unauthorized."
          }
        headers: []
        description: Unauthorized
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "The given data was invalid.",
          "errors": {
          "name": [
          "El campo nombre es obligatorio."
          ]
          }
          }
        headers: []
        description: 'Validation Error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/pets/{id}'
    metadata:
      groupName: 'Gestión de Mascotas'
      groupDescription: |-

        Endpoints para gestionar las mascotas del usuario autenticado,
        así como listar todas las mascotas disponibles.
        Estos endpoints requieren autenticación via Sanctum, excepto /pets/all.
      subgroup: ''
      subgroupDescription: ''
      title: 'Muestra la mascota especificada.'
      description: |-
        Este endpoint requiere que el usuario autenticado sea el propietario de la mascota
        o tenga permisos para verla (ver PetPolicy).
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the pet.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pet:
        name: pet
        description: 'El ID de la mascota a mostrar.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      pet: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 1,
          "user_id": 1,
          "name": "Firulais",
          "species": "Dog",
          "breed": "Labrador",
          "age": 3,
          "created_at": "2023-10-27T10:00:00.000000Z",
          "updated_at": "2023-10-27T10:00:00.000000Z"
          }
        headers: []
        description: Success
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: Unauthenticated
        custom: []
      -
        status: 403
        content: |-
          {
          "message": "This action is unauthorized."
          }
        headers: []
        description: Unauthorized
        custom: []
      -
        status: 404
        content: |-
          {
          "message": "No query results for model [App\\Models\\Pet] 10"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/pets/{id}'
    metadata:
      groupName: 'Gestión de Mascotas'
      groupDescription: |-

        Endpoints para gestionar las mascotas del usuario autenticado,
        así como listar todas las mascotas disponibles.
        Estos endpoints requieren autenticación via Sanctum, excepto /pets/all.
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualiza la mascota especificada.'
      description: |-
        Este endpoint requiere que el usuario autenticado sea el propietario de la mascota
        o tenga permisos para actualizarla (ver PetPolicy).
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the pet.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pet:
        name: pet
        description: 'El ID de la mascota a actualizar. Ejemplo: 1'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      pet: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'El nombre de la mascota. Opcional. Ejemplo: "Maximilian"'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      species:
        name: species
        description: 'La especie de la mascota. Opcional. Ejemplo: "Gato"'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      breed:
        name: breed
        description: 'La raza de la mascota. Opcional. Ejemplo: "Siamés"'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      age:
        name: age
        description: 'La edad de la mascota. Opcional. Mínimo: 0. Ejemplo: 6'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: architecto
      species: architecto
      breed: architecto
      age: 16
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Mascota actualizada exitosamente.",
          "pet": {
          "id": 1,
          "user_id": 1,
          "name": "Maximilian",
          "species": "Perro",
          "breed": "Golden Retriever",
          "age": 6,
          "created_at": "2023-10-27T10:00:00.000000Z",
          "updated_at": "2023-10-27T11:00:00.000000Z"
          }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: Unauthenticated
        custom: []
      -
        status: 403
        content: |-
          {
          "message": "This action is unauthorized."
          }
        headers: []
        description: Unauthorized
        custom: []
      -
        status: 404
        content: |-
          {
          "message": "No query results for model [App\\Models\\Pet] 10"
          }
        headers: []
        description: 'Not Found'
        custom: []
      -
        status: 422
        content: |-
          {
          "message": "The given data was invalid.",
          "errors": {
          "age": [
          "El campo age debe ser un número entero."
          ]
          }
          }
        headers: []
        description: 'Validation Error'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/pets/{id}'
    metadata:
      groupName: 'Gestión de Mascotas'
      groupDescription: |-

        Endpoints para gestionar las mascotas del usuario autenticado,
        así como listar todas las mascotas disponibles.
        Estos endpoints requieren autenticación via Sanctum, excepto /pets/all.
      subgroup: ''
      subgroupDescription: ''
      title: 'Elimina la mascota especificada.'
      description: |-
        Este endpoint requiere que el usuario autenticado sea el propietario de la mascota
        o tenga permisos para eliminarla (ver PetPolicy).
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the pet.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      pet:
        name: pet
        description: 'El ID de la mascota a eliminar. Ejemplo: 1'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
      pet: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "Mascota eliminada exitosamente."
          }
        headers: []
        description: Success
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Unauthenticated."
          }
        headers: []
        description: Unauthenticated
        custom: []
      -
        status: 403
        content: |-
          {
          "message": "This action is unauthorized."
          }
        headers: []
        description: Unauthorized
        custom: []
      -
        status: 404
        content: |-
          {
          "message": "No query results for model [App\\Models\\Pet] 10"
          }
        headers: []
        description: 'Not Found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
